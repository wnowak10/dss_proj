{
  "columnsSelection": {
    "mode": "ALL"
  },
  "explorationSampling": {
    "_refreshTrigger": 0,
    "selection": {
      "filter": {
        "distinct": false,
        "enabled": false
      },
      "latestPartitionsN": 1,
      "maxRecords": 10000,
      "ordering": {
        "rules": [],
        "enabled": false
      },
      "withinFirstN": -1,
      "partitionSelectionMethod": "ALL",
      "maxStoredBytes": 104857600,
      "targetRatio": 0.02,
      "maxReadUncompressedBytes": -1,
      "samplingMethod": "HEAD_SEQUENTIAL"
    },
    "autoRefreshSample": false
  },
  "explorationFilters": [],
  "origin": "PREPARE_RECIPE",
  "exploreUIParams": {
    "autoRefresh": true
  },
  "steps": [
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "DateParser",
      "params": {
        "outCol": "",
        "formats": [
          "yyyy/MM/dd"
        ],
        "columns": [
          "birthdate"
        ],
        "timezone_id": "UTC",
        "appliesTo": "SINGLE_COLUMN",
        "lang": "auto"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "DateDifference",
      "params": {
        "output": "age_first_order",
        "input2": "first_order_date",
        "outputUnit": "YEARS",
        "input1": "birthdate",
        "compareTo": "COLUMN",
        "reverse": false
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "MinMaxProcessor",
      "params": {
        "upperBound": "108.0",
        "columns": [
          "age_first_order"
        ],
        "clear": true,
        "lowerBound": "9.000"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "ColumnsSelector",
      "params": {
        "columns": [
          "first_order_date",
          "birthdate"
        ],
        "keep": false,
        "appliesTo": "COLUMNS"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "UserAgentClassifier",
      "params": {
        "column": "user_agent"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "ColumnsSelector",
      "params": {
        "columns": [
          "user_agent",
          "user_agent_type",
          "user_agent_category",
          "user_agent_version",
          "user_agent_osversion",
          "user_agent_osflavor"
        ],
        "keep": false,
        "appliesTo": "COLUMNS"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "GeoIPResolver",
      "params": {
        "inCol": "ip_address",
        "extract_country": true,
        "extract_countrycode3": false,
        "extract_city": false,
        "extract_latlng": false,
        "extract_countrycode": false,
        "extract_postalcode": false,
        "extract_timezone": false,
        "outColPrefix": "ip_address_",
        "extract_continentcode": false,
        "extract_region": false,
        "extract_geopoint": true
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "ColumnsSelector",
      "params": {
        "columns": [
          "count",
          "total_sum",
          "ip_address"
        ],
        "keep": false,
        "appliesTo": "COLUMNS"
      },
      "alwaysShowComment": false
    },
    {
      "preview": true,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "PythonUDF",
      "params": {
        "mode": "CELL",
        "envSelection": {
          "envMode": "INHERIT"
        },
        "stopOnError": true,
        "pythonSourceCode": "# Modify the process function to fit your needs\nfrom dirr.test import x\n\ndef process(row):\n    # In \u0027cell\u0027 mode, the process function must return\n    # a single cell value for each row,\n    # which will be affected to a new column.\n    # The \u0027row\u0027 argument is a dictionary of columns of the row\n    return x\n",
        "useKernel": true,
        "column": "x",
        "sourceColumnsList": [],
        "usePythonUnicode": true,
        "vectorSize": 256,
        "vectorize": false
      },
      "alwaysShowComment": false
    }
  ],
  "maxProcessedMemTableBytes": -1,
  "previewMode": "ALL_ROWS",
  "vizSampling": {
    "_refreshTrigger": 0,
    "autoRefreshSample": false
  },
  "analysisColumnData": {},
  "columnWidthsByName": {
    "age_first_order": 128,
    "ip_address_geopoint": 183,
    "gender": 100,
    "user_agent_brand": 135,
    "user_agent_os": 113,
    "ip_address_country": 150,
    "pages_visited_avg": 143,
    "customerID": 100,
    "x": 100,
    "campaign": 100
  },
  "sorting": [],
  "globalSearchQuery": "",
  "coloring": {
    "scheme": "MEANING_AND_STATUS",
    "individualColumns": [],
    "valueColoringMode": "HASH"
  }
}